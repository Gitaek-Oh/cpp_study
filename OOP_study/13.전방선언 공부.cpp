//-----------------------------------------------------------------------------------
// Player.h 내용
//-----------------------------------------------------------------------------------
#include <iostream>
using namespace std;

//class Monster; 전방선언

class Player
{
public:
	void KillMonster();
	void KillMonster2()
	{
		_target2->_hp = 0;  // 여기서 변수의 내용을 수정하는 것은 좋지 않다. (아래 설명 참조)
		
		/*전방선언은 클래스의 설계도를 나중에 가져올테니 일단 넘어가자는 선언이기 때문에
		Monster 클래스의 설계도가 없어서 오류가 발생한다.*/

	}

public:
	int _hp;
	int _attack;

	class Monster* _target2; //이런식으로 전방선언 해도 된다.

	Player _taget2; // Player의 설계도의 사이즈를 계산하는 데 한번 더 Player의 설계도를 계산해야된다 -> 논리적으로 말이 안되서 오류가 발생한다.
	Player* _target2; // 포인터는 4 or 8 바이트의 고정 크기를 가지고 있기 때문에 오류가 발생되지 않는다. -> 오류가 발생하지 않는다.
};

//-----------------------------------------------------------------------------------
// Player.cpp 내용
//-----------------------------------------------------------------------------------
#include "Player.h"
#include "Monster.h"

void Player::KillMonster()
{
	_target->_hp = 0;
	(*_target2)._hp = 0; // 위에와 같은 포인터
	/*_target2 가 포인터이기 때문에 주소로 뿅 이동하는 것은 가능하지만 주소 어딘가아 hp를 가지고 있지만 0바이트에 있는지 4바이트에 있는지 8바이트에 있는지 알 수 없다.
	 monster클래스의 설계도가 없기 때문에 오류가 발생한다(전방선언은 클래스의 설계도를 가져오는 것이 아니다!!)
	 결국 위에다가 #include "Monster.h"를 추가해서 설계도를 확인한다...*/

	void KillMonster2() 
	// Player.h에 내용을 정의하면 Monster의 설계를 정확히 보지않고는 만들어 줄 수 없기 때문에 #include "Monster.h"를 추가줘야한다.
	// 따라서 "Monster.h"를 불러오는 것에 대한 다른 문제가 생길 수도 있기 때문에 cpp에서 정의해주는 것이 좋다
	{
		_target2->_hp = 0;

	}
}

void 
